<Application x:Class="CourseWork.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:CourseWork"
             StartupUri="Windows/AuthorizationWindow.xaml">
    <Application.Resources>
        <!--Запасные цвета-->
        <!--<SolidColorBrush x:Key="ColorAccent" Color="#FFE63D98"/>
        <SolidColorBrush x:Key="ColorAdditional" Color="#FFFF7D98"/>
        <SolidColorBrush x:Key="ColorSecondary" Color="LightPink"/>
        <SolidColorBrush x:Key="ColorPrimary" Color="White"/>-->
		
        <SolidColorBrush x:Key="ColorAccent" Color="#8774e1"/>
        <SolidColorBrush x:Key="ColorAdditional" Color="#7963dd"/>
        <SolidColorBrush x:Key="ColorMain" Color="#212121"/>
		<SolidColorBrush x:Key="ColorSecondary" Color="#181818"/>
        <SolidColorBrush x:Key="ColorPrimary" Color="White"/>
        <SolidColorBrush x:Key="MidBrsh" Color="#202020"/>
        
        <Style TargetType="Button">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontFamily" Value="Comic Sans MS"/>
            <Setter Property="Width" Value="175"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Foreground" Value="{StaticResource ColorPrimary}"/>
            <Setter Property="Background" Value="{StaticResource ColorAccent}"/>
			<Setter Property="Border.BorderThickness" Value="1" />
			<Setter Property="Border.BorderBrush" Value="{StaticResource ColorPrimary}"/>
			<Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource ColorAdditional}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="TextBlock" x:Key="BlockHeader">
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="HorizontalAlignment" Value="Center"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="FontSize" Value="30"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontFamily" Value="Comic Sans MS"/>
			<Setter Property="Foreground" Value="{StaticResource ColorPrimary}"/>
        </Style>
        <Style TargetType="TextBlock" x:Key="BlockCommon">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontFamily" Value="Comic Sans MS"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="Width" Value="160"/>
            <Setter Property="TextAlignment" Value="Left"/>
			<Setter Property="Foreground" Value="{StaticResource ColorPrimary}"/>
        </Style>
        <Style TargetType="Button" x:Key="BlockTable">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontFamily" Value="Comic Sans MS"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Width" Value="Auto"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource ColorPrimary}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource ColorSecondary}"/>
                    <Setter Property="Foreground" Value="{StaticResource ColorAccent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="TextBlock" x:Key="BlockCommonMain">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontFamily" Value="Comic Sans MS"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="TextAlignment" Value="Right"/>
			<Setter Property="Foreground" Value="{StaticResource ColorPrimary}"/>
        </Style>
        <Style TargetType="TextBlock" x:Key="BlockHistory">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontFamily" Value="Comic Sans MS"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="Width" Value="250"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="{StaticResource ColorPrimary}"/>
        </Style>
        <Style TargetType="TextBlock" x:Key="ErrorMessage">
            <Setter Property="Foreground" Value="Red"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontFamily" Value="Comis Sans MS"/>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Background" Value="{StaticResource ColorMain}"/>
			<Setter Property="Foreground" Value="{StaticResource ColorPrimary}"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontFamily" Value="Comic Sans MS"/>
            <Setter Property="Width" Value="175"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="BorderBrush" Value="{StaticResource ColorPrimary}"/>
        </Style>
        <Style TargetType="PasswordBox">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
			<Setter Property="Background" Value="{StaticResource ColorMain}"/>
			<Setter Property="Foreground" Value="{StaticResource ColorPrimary}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontFamily" Value="Comic Sans MS"/>
            <Setter Property="Width" Value="175"/>
            <Setter Property="Height" Value="30"/>
			<Setter Property="BorderBrush" Value="{StaticResource ColorPrimary}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style TargetType="Image" x:Key="ProductImage">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Height" Value="125"/>
        </Style>
        <Style TargetType="ListView">
            <Setter Property="Foreground" Value="{StaticResource ColorPrimary}" />
            <Setter Property="Background" Value="{StaticResource ColorMain}" />
            <!--<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>-->
        </Style>
        <Style x:Key="myHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="Visibility" Value="Collapsed"/>
        </Style>


        <!-- ContextMenu separator style -->
        <Style x:Key="MenuSeparatorStyle" TargetType="{x:Type Separator}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="Background" Value="#323232"/>
            <Setter Property="Height" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Separator}">
                        <Border Height="5" Margin="-2,2" VerticalAlignment="Center" Background="#FF464646"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- MenuItem style -->
        <Style TargetType="{x:Type MenuItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Foreground" Value="#BEBEBE"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Grid Name="Root" Height="27" Background="{StaticResource MidBrsh}">
                            <ContentPresenter Name="HeaderHost" Margin="10,0,0,0" ContentSource="Header" RecognizesAccessKey="True" HorizontalAlignment="Left" VerticalAlignment="Center"
                      TextOptions.TextRenderingMode="ClearType" TextBlock.FontSize="12" TextBlock.Foreground="{TemplateBinding Foreground}" TextOptions.TextFormattingMode="Display"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Root" Property="Background" Value="#505050"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Root" Property="Background" Value="#808080"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- ContextMenu style -->
        <Style TargetType="{x:Type ContextMenu}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Width" Value="170"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Grid Background="Transparent">
                            <Border Margin="0,0,5,5" Background="{StaticResource MidBrsh}" BorderThickness="0">
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" Margin="2"/>
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="3" ShadowDepth="3" Color="Black" Opacity="0.5"/>
                                </Border.Effect>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style TargetType="TextBlock" x:Key="BlockDescription" >
            <Setter Property="FontFamily" Value="Comic Sans MS"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="Width" Value="200"/>
            <Setter Property="TextAlignment" Value="Left"/>
        </Style>
        <Style TargetType="TextBlock" x:Key="BlockDescription2" >
            <Setter Property="FontFamily" Value="Comic Sans MS"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="TextAlignment" Value="Left"/>
        </Style>
        <Style TargetType="{x:Type ListViewItem}">
            <Setter Property="HorizontalAlignment" Value="Center"></Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource ColorSecondary}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource ColorMain}"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource ColorSecondary}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource ColorMain}"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontFamily" Value="Comic Sans MS"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="Auto"/>
            <Setter Property="Background" Value="{StaticResource ColorMain}"/>
            <Setter Property="Foreground" Value="{StaticResource ColorPrimary}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" >
                                <ToggleButton.Template>
                                    <ControlTemplate>
                                        <Grid>
                                            <Border x:Name="Border" Background="{StaticResource ColorMain}" BorderBrush="{StaticResource ColorPrimary}" BorderThickness="1" />
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                                                <Setter TargetName="Border" Property="Background" Value="DarkGray" />
                                            </Trigger>
                                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                                <Setter TargetName="Border" Property="Background" Value="{StaticResource ColorMain}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3"  />
                            <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True"  Focusable="False" PopupAnimation="Slide">
                                <Grid  Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" Background="{StaticResource ColorPrimary}" />
                                    <ScrollViewer SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ComboBoxItem">
            <Setter Property="Background" Value="{StaticResource ColorMain}"/>
            <Setter Property="Foreground" Value="{StaticResource ColorPrimary}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ColorPrimary}"/>
            <Setter Property="BorderThickness" Value="0.4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="DarkGray"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" SnapsToDevicePixels="true">
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                <RowDefinition Height="0.00001*"/>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                            </Grid.RowDefinitions>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1" CornerRadius="10"/>
                            <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" HorizontalAlignment="Left" Width="17"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Margin="2"/>
                                </Track.Thumb>
                            </Track>
                        </Grid>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Black"/>
            <Setter Property="BorderBrush" Value="{StaticResource ColorPrimary}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" CornerRadius="10"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border x:Name="rectangle" Background="{StaticResource ColorPrimary}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}" CornerRadius="8"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="rectangle" Value="DarkGray"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Background" TargetName="rectangle" Value="DarkGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TextBox" x:Key="WideBox">
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="Height" Value="70"/>
            <Setter Property="Width" Value="250"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Background" Value="{StaticResource ColorMain}"/>
            <Setter Property="Foreground" Value="{StaticResource ColorPrimary}"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontFamily" Value="Comic Sans MS"/>
        </Style>

    </Application.Resources>
</Application>
